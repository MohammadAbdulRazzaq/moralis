openapi: 3.0.0
info:
  title: Moralis API
  version: "2"
servers:
- url: https://virtserver.swaggerhub.com/vit534/apispec/2
  description: SwaggerHub API Auto Mocking
- url: https://deep-index.moralis.io/api/v2
security:
- ApiKeyAuth: []
paths:
  /block/{block_number_or_hash}:
    get:
      tags:
      - native
      summary: Gets block contents by block hash
      description: Gets the contents of a block by block hash
      operationId: getBlock
      parameters:
      - name: chain
        in: query
        description: The chain to query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/chainList'
      - name: subdomain
        in: query
        description: The subdomain of the moralis server to use (Only use when selecting
          local devchain as chain)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: block_number_or_hash
        in: path
        description: The block hash or block number
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Returns the contents of a block
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/block'
      security:
      - ApiKeyAuth: []
  /dateToBlock:
    get:
      tags:
      - native
      summary: Gets the closest block of the provided date
      description: Gets the closest block of the provided date
      operationId: getDateToBlock
      parameters:
      - name: chain
        in: query
        description: The chain to query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/chainList'
      - name: providerUrl
        in: query
        description: web3 provider url to user when using local dev chain
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: date
        in: query
        description: Unix date in miliseconds or a datestring (any format that is
          accepted by momentjs)
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the blocknumber and corresponding date and timestamp
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/blockDate'
      security:
      - ApiKeyAuth: []
  /{address}/logs:
    get:
      tags:
      - native
      summary: Gets address logs
      description: Gets the logs from an address
      operationId: getLogsByAddress
      parameters:
      - name: chain
        in: query
        description: The chain to query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/chainList'
      - name: subdomain
        in: query
        description: The subdomain of the moralis server to use (Only use when selecting
          local devchain as chain)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: block_number
        in: query
        description: "The block number\n* Provide the param 'block_numer' or ('from_block'\
          \ and / or 'to_block')\n* If 'block_numer' is provided in conbinaison with\
          \ 'from_block' and / or 'to_block', 'block_number' will will be used\n"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: from_block
        in: query
        description: "The minimum block number from where to get the logs\n* Provide\
          \ the param 'block_numer' or ('from_block' and / or 'to_block')\n* If 'block_numer'\
          \ is provided in conbinaison with 'from_block' and / or 'to_block', 'block_number'\
          \ will will be used\n"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: to_block
        in: query
        description: "The maximum block number from where to get the logs\n* Provide\
          \ the param 'block_numer' or ('from_block' and / or 'to_block')\n* If 'block_numer'\
          \ is provided in conbinaison with 'from_block' and / or 'to_block', 'block_number'\
          \ will will be used\n"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: from_date
        in: query
        description: "The date from where to get the logs (any format that is accepted\
          \ by momentjs)\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date'\
          \ and 'from_block' are provided, 'from_block' will be used.\n* If 'from_date'\
          \ and the block params are provided, the block params will be used. Please\
          \ refer to the blocks params sections (block_number,from_block and to_block)\
          \ on how to use them\n"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: to_date
        in: query
        description: "Get the logs to this date (any format that is accepted by momentjs)\n\
          * Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block'\
          \ are provided, 'to_block' will be used.\n* If 'to_date' and the block params\
          \ are provided, the block params will be used. Please refer to the blocks\
          \ params sections (block_number,from_block and to_block) on how to use them\n"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: address
        in: path
        description: address
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: topic0
        in: query
        description: topic0
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: topic1
        in: query
        description: topic1
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: topic2
        in: query
        description: topic2
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: topic3
        in: query
        description: topic3
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the logs of an address
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logEventByAddress'
      security:
      - ApiKeyAuth: []
  /block/{block_number_or_hash}/nft/transfers:
    get:
      tags:
      - native
      summary: Gets NFT transfers by block number or block hash
      description: Gets NFT transfers by block number or block hash
      operationId: getNFTTransfersByBlock
      parameters:
      - name: chain
        in: query
        description: The chain to query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/chainList'
      - name: subdomain
        in: query
        description: The subdomain of the moralis server to use (Only use when selecting
          local devchain as chain)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: block_number_or_hash
        in: path
        description: The block hash or block number
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: offset
        in: query
        description: offset
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: limit
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 500
      - name: cursor
        in: query
        description: |
          The cursor returned in the last response (for getting the next page)
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the contents of a block
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/nftTransferCollection'
      security:
      - ApiKeyAuth: []
  /transaction/{transaction_hash}:
    get:
      tags:
      - native
      summary: Get transaction details by transaction hash
      description: Gets the contents of a block transaction by hash
      operationId: getTransaction
      parameters:
      - name: chain
        in: query
        description: The chain to query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/chainList'
      - name: subdomain
        in: query
        description: The subdomain of the moralis server to use (Only use when selecting
          local devchain as chain)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: transaction_hash
        in: path
        description: The transaction hash
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 0xdc85cb1b75fd09c2f6d001fea4aba83764193cbd7881a1fa8ccde350a5681109
      responses:
        "200":
          description: Transaction details by transaction hash
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/blockTransaction'
      security:
      - ApiKeyAuth: []
  /{address}/events:
    post:
      tags:
      - native
      summary: Gets events by topic
      description: Gets events in descending order based on block number
      operationId: getContractEvents
      parameters:
      - name: chain
        in: query
        description: The chain to query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/chainList'
      - name: subdomain
        in: query
        description: The subdomain of the moralis server to use (Only use when selecting
          local devchain as chain)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: providerUrl
        in: query
        description: web3 provider url to user when using local dev chain
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: from_block
        in: query
        description: "The minimum block number from where to get the logs\n* Provide\
          \ the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block'\
          \ are provided, 'from_block' will be used.\n"
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
      - name: to_block
        in: query
        description: "The maximum block number from where to get the logs.\n* Provide\
          \ the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block' are provided,\
          \ 'to_block' will be used.\n"
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
      - name: from_date
        in: query
        description: "The date from where to get the logs (any format that is accepted\
          \ by momentjs)\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date'\
          \ and 'from_block' are provided, 'from_block' will be used.\n"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: to_date
        in: query
        description: "Get the logs to this date (any format that is accepted by momentjs)\n\
          * Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block'\
          \ are provided, 'to_block' will be used.\n"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: address
        in: path
        description: address
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: topic
        in: query
        description: The topic of the event
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: offset
        in: query
        description: offset
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: limit
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
      requestBody:
        description: ABI of the specific event
        content:
          application/json:
            schema:
              type: object
        required: false
      responses:
        "200":
          description: Returns a collection of events by topic
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/logEvent'
                x-content-type: application/json
      security:
      - ApiKeyAuth: []
  /{address}/function:
    post:
      tags:
      - native
      summary: Runs a function of a contract abi
      description: Runs a given function of a contract abi and returns readonly data
      operationId: runContractFunction
      parameters:
      - name: chain
        in: query
        description: The chain to query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/chainList'
      - name: subdomain
        in: query
        description: The subdomain of the moralis server to use (Only use when selecting
          local devchain as chain)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: providerUrl
        in: query
        description: web3 provider url to user when using local dev chain
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: address
        in: path
        description: address
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: function_name
        in: query
        description: function_name
        required: true
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunContractDto'
        required: true
      responses:
        "200":
          description: Returns response of the function executed
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
      security:
      - ApiKeyAuth: []
  /{address}:
    get:
      tags:
      - account
      summary: Gets native transactions
      description: Gets native transactions in descending order based on block number
      operationId: getTransactions
      parameters:
      - name: chain
        in: query
        description: The chain to query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/chainList'
      - name: subdomain
        in: query
        description: The subdomain of the moralis server to use (Only use when selecting
          local devchain as chain)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: from_block
        in: query
        description: "The minimum block number from where to get the transactions\n\
          * Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block'\
          \ are provided, 'from_block' will be used.\n"
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
      - name: to_block
        in: query
        description: "The maximum block number from where to get the transactions.\n\
          * Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block'\
          \ are provided, 'to_block' will be used.\n"
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
      - name: from_date
        in: query
        description: "The date from where to get the transactions (any format that\
          \ is accepted by momentjs)\n* Provide the param 'from_block' or 'from_date'\n\
          * If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: to_date
        in: query
        description: "Get the transactions to this date (any format that is accepted\
          \ by momentjs)\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date'\
          \ and 'to_block' are provided, 'to_block' will be used.\n"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: address
        in: path
        description: address
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: offset
        in: query
        description: offset
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: limit
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
      responses:
        "200":
          description: Returns a collection of native transactions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transactionCollection'
      security:
      - ApiKeyAuth: []
  /{address}/balance:
    get:
      tags:
      - account
      summary: Gets native balance for a specific address.
      description: Gets native balance for a specific address
      operationId: getNativeBalance
      parameters:
      - name: chain
        in: query
        description: The chain to query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/chainList'
      - name: providerUrl
        in: query
        description: web3 provider url to user when using local dev chain
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: address
        in: path
        description: The address for which the native balance will be checked
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
      - name: to_block
        in: query
        description: The block number on which the balances should be checked
        required: false
        style: form
        explode: true
        schema:
          type: number
      responses:
        "200":
          description: Returns native balance for a specific address
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/nativeBalance'
      security:
      - ApiKeyAuth: []
  /{address}/erc20:
    get:
      tags:
      - account
      summary: Gets token balances for a specific address.
      description: Gets token balances for a specific address
      operationId: getTokenBalances
      parameters:
      - name: chain
        in: query
        description: The chain to query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/chainList'
      - name: subdomain
        in: query
        description: The subdomain of the moralis server to use (Only use when selecting
          local devchain as chain)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: address
        in: path
        description: The address for which token balances will be checked
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
      - name: to_block
        in: query
        description: The block number on which the balances should be checked
        required: false
        style: form
        explode: true
        schema:
          type: number
      - name: token_addresses
        in: query
        description: The addresses to get balances for (Optional)
        required: false
        style: form
        explode: true
        schema:
          maxItems: 10
          type: array
          items:
            type: string
      responses:
        "200":
          description: Returns token balances for a specific address
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/erc20TokenBalance'
                x-content-type: application/json
      security:
      - ApiKeyAuth: []
  /{address}/erc20/transfers:
    get:
      tags:
      - account
      summary: Gets erc 20 token transactions
      description: Gets ERC20 token transactions in descending order based on block
        number
      operationId: getTokenTransfers
      parameters:
      - name: chain
        in: query
        description: The chain to query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/chainList'
      - name: subdomain
        in: query
        description: The subdomain of the moralis server to use (Only use when selecting
          local devchain as chain)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: from_block
        in: query
        description: "The minimum block number from where to get the transactions\n\
          * Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block'\
          \ are provided, 'from_block' will be used.\n"
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
      - name: to_block
        in: query
        description: "The maximum block number from where to get the transactions.\n\
          * Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block'\
          \ are provided, 'to_block' will be used.\n"
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
      - name: from_date
        in: query
        description: "The date from where to get the transactions (any format that\
          \ is accepted by momentjs)\n* Provide the param 'from_block' or 'from_date'\n\
          * If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: to_date
        in: query
        description: "Get the transactions to this date (any format that is accepted\
          \ by momentjs)\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date'\
          \ and 'to_block' are provided, 'to_block' will be used.\n"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: address
        in: path
        description: address
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: offset
        in: query
        description: offset
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: limit
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
      responses:
        "200":
          description: Returns a collection of token transactions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/erc20TransactionCollection'
      security:
      - ApiKeyAuth: []
  /{address}/nft:
    get:
      tags:
      - account
      summary: Gets the NFTs owned by a given address
      description: "Gets NFTs owned by the given address\n* The response will include\
        \ status [SYNCED/SYNCING] based on the contracts being indexed.\n* Use the\
        \ token_address param to get results for a specific contract only\n* Note\
        \ results will include all indexed NFTs\n* Any request which includes the\
        \ token_address param will start the indexing process for that NFT collection\
        \ the very first time it is requested\n"
      operationId: getNFTs
      parameters:
      - name: chain
        in: query
        description: The chain to query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/chainList'
      - name: address
        in: path
        description: The owner of a given token
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: format
        in: query
        description: The format of the token id
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: decimal
          enum:
          - decimal
          - hex
          default: decimal
      - name: offset
        in: query
        description: offset
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: limit
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
      - name: token_addresses
        in: query
        description: The addresses to get balances for (Optional)
        required: false
        style: form
        explode: true
        schema:
          maxItems: 10
          type: array
          items:
            type: string
      - name: cursor
        in: query
        description: |
          The cursor returned in the last response (for getting the next page)
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Returns a collection of nft owners
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/nftOwnerCollection'
      security:
      - ApiKeyAuth: []
  /{address}/nft/transfers:
    get:
      tags:
      - account
      summary: Gets NFT transfers to and from a given address
      description: Gets the transfers of the tokens matching the given parameters
      operationId: getNFTTransfers
      parameters:
      - name: chain
        in: query
        description: The chain to query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/chainList'
      - name: address
        in: path
        description: The sender or recepient of the transfer
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: format
        in: query
        description: The format of the token id
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: decimal
          enum:
          - decimal
          - hex
          default: decimal
      - name: direction
        in: query
        description: The transfer direction
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: both
          enum:
          - both
          - to
          - from
          default: both
      - name: offset
        in: query
        description: offset
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: limit
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
      - name: cursor
        in: query
        description: |
          The cursor returned in the last response (for getting the next page)
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Returns a collection of NFT transfer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/nftTransferCollection'
      security:
      - ApiKeyAuth: []
  /{address}/nft/{token_address}:
    get:
      tags:
      - account
      summary: Gets the NFTs owned by a given address
      description: |
        Gets NFTs owned by the given address
        * Use the token_address param to get results for a specific contract only
        * Note results will include all indexed NFTs
        * Any request which includes the token_address param will start the indexing process for that NFT collection the very first time it is requested
      operationId: getNFTsForContract
      parameters:
      - name: chain
        in: query
        description: The chain to query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/chainList'
      - name: address
        in: path
        description: The owner of a given token
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: token_address
        in: path
        description: Address of the contract
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: format
        in: query
        description: The format of the token id
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: decimal
          enum:
          - decimal
          - hex
          default: decimal
      - name: offset
        in: query
        description: offset
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: limit
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
      responses:
        "200":
          description: Returns a collection of nft owners
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/nftOwnerCollection'
      security:
      - ApiKeyAuth: []
  /erc20/metadata:
    get:
      tags:
      - token
      summary: Gets token metadata
      description: "Returns metadata (name, symbol, decimals, logo) for a given token\
        \ contract address."
      operationId: getTokenMetadata
      parameters:
      - name: chain
        in: query
        description: The chain to query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/chainList'
      - name: subdomain
        in: query
        description: The subdomain of the moralis server to use (Only use when selecting
          local devchain as chain)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: providerUrl
        in: query
        description: web3 provider url to user when using local dev chain
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: addresses
        in: query
        description: The addresses to get metadata for
        required: true
        style: form
        explode: true
        schema:
          maxItems: 10
          type: array
          items:
            type: string
      responses:
        "200":
          description: "Returns metadata (name, symbol, decimals, logo) for a given\
            \ token contract address."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/erc20Metadata'
                x-content-type: application/json
      security:
      - ApiKeyAuth: []
  /nft/{address}/trades:
    get:
      tags:
      - token
      summary: Get nft trades by marketplaces
      description: Get the nft trades for a given contracts and marketplace
      operationId: getNFTTrades
      parameters:
      - name: chain
        in: query
        description: The chain to query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/chainList'
      - name: from_block
        in: query
        description: "The minimum block number from where to get the transfers\n*\
          \ Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block'\
          \ are provided, 'from_block' will be used.\n"
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
      - name: to_block
        in: query
        description: To get the reserves at this block number
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: from_date
        in: query
        description: "The date from where to get the transfers (any format that is\
          \ accepted by momentjs)\n* Provide the param 'from_block' or 'from_date'\n\
          * If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: to_date
        in: query
        description: "Get the reserves to this date (any format that is accepted by\
          \ momentjs)\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date'\
          \ and 'to_block' are provided, 'to_block' will be used.\n"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: provider_url
        in: query
        description: web3 provider url to user when using local dev chain
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: marketplace
        in: query
        description: marketplace from where to get the trades (only opensea is supported
          at the moment)
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: opensea
          enum:
          - opensea
          default: opensea
        example: opensea
      - name: offset
        in: query
        description: offset
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: limit
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
      - name: address
        in: path
        description: Address of the contract
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 0xa2107fa5b38d9bbd2c461d6edf11b11a50f6b974
      responses:
        "200":
          description: Returns the trades
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tradeCollection'
      security:
      - ApiKeyAuth: []
  /nft/{address}/lowestprice:
    get:
      tags:
      - token
      summary: Get the lowest price found for a nft token contract
      description: Get the lowest price found for a nft token contract for the last
        x days (only trades paid in ETH)
      operationId: getNFTLowestPrice
      parameters:
      - name: chain
        in: query
        description: The chain to query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/chainList'
      - name: days
        in: query
        description: |
          The number of days to look back to find the lowest price
          If not provided 7 days will be the default
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
      - name: provider_url
        in: query
        description: web3 provider url to user when using local dev chain
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: marketplace
        in: query
        description: marketplace from where to get the trades (only opensea is supported
          at the moment)
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: opensea
          enum:
          - opensea
          default: opensea
        example: opensea
      - name: address
        in: path
        description: Address of the contract
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 0xa2107fa5b38d9bbd2c461d6edf11b11a50f6b974
      responses:
        "200":
          description: Returns the trade with the lowest price
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/trade'
      security:
      - ApiKeyAuth: []
  /erc20/metadata/symbols:
    get:
      tags:
      - token
      summary: Gets token metadata
      description: "Returns metadata (name, symbol, decimals, logo) for a given token\
        \ contract address."
      operationId: getTokenMetadataBySymbol
      parameters:
      - name: chain
        in: query
        description: The chain to query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/chainList'
      - name: subdomain
        in: query
        description: The subdomain of the moralis server to use (Only use when selecting
          local devchain as chain)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: symbols
        in: query
        description: The symbols to get metadata for
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            example: LINK
      responses:
        "200":
          description: "Returns metadata (name, symbol, decimals, logo) for a given\
            \ token contract address."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/erc20Metadata'
                x-content-type: application/json
      security:
      - ApiKeyAuth: []
  /erc20/{address}/price:
    get:
      tags:
      - token
      summary: Gets token price
      description: Returns the price nominated in the native token and usd for a given
        token contract address.
      operationId: getTokenPrice
      parameters:
      - name: chain
        in: query
        description: The chain to query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/chainList'
      - name: providerUrl
        in: query
        description: web3 provider url to user when using local dev chain
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: address
        in: path
        description: The address of the token contract
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: exchange
        in: query
        description: The factory name or address of the token exchange
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: to_block
        in: query
        description: to_block
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
      responses:
        "200":
          description: Returns the price nominated in the native token and usd for
            a given token contract address
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/erc20Price'
      security:
      - ApiKeyAuth: []
  /erc20/{address}/transfers:
    get:
      tags:
      - token
      summary: Gets erc20 transactions of a token contract
      description: Gets ERC20 token contract transactions in descending order based
        on block number
      operationId: getTokenAddressTransfers
      parameters:
      - name: chain
        in: query
        description: The chain to query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/chainList'
      - name: subdomain
        in: query
        description: The subdomain of the moralis server to use (Only use when selecting
          local devchain as chain)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: from_block
        in: query
        description: "The minimum block number from where to get the transfers\n*\
          \ Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block'\
          \ are provided, 'from_block' will be used.\n"
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
      - name: to_block
        in: query
        description: "The maximum block number from where to get the transfers.\n\
          * Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block'\
          \ are provided, 'to_block' will be used.\n"
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
      - name: from_date
        in: query
        description: "The date from where to get the transfers (any format that is\
          \ accepted by momentjs)\n* Provide the param 'from_block' or 'from_date'\n\
          * If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: to_date
        in: query
        description: "Get the transfers to this date (any format that is accepted\
          \ by momentjs)\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date'\
          \ and 'to_block' are provided, 'to_block' will be used.\n"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: address
        in: path
        description: The address of the token contract
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: offset
        in: query
        description: offset
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: limit
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
      responses:
        "200":
          description: Returns a collection of token contract transactions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/erc20TransactionCollection'
      security:
      - ApiKeyAuth: []
  /erc20/{address}/allowance:
    get:
      tags:
      - token
      summary: Gets the amount which the spender is allowed to withdraw from the owner.
      description: Gets the amount which the spender is allowed to withdraw from the
        spender
      operationId: getTokenAllowance
      parameters:
      - name: chain
        in: query
        description: The chain to query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/chainList'
      - name: providerUrl
        in: query
        description: web3 provider url to user when using local dev chain
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: address
        in: path
        description: The address of the token contract
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: owner_address
        in: query
        description: The address of the token owner
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: spender_address
        in: query
        description: The address of the token spender
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Returns the amount which the spender is allowed to withdraw
            from the owner..
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/erc20Allowance'
      security:
      - ApiKeyAuth: []
  /nft/search:
    get:
      tags:
      - token
      summary: Retrieves the NFT data based on a metadata search
      description: Gets NFTs that match a given metadata search.
      operationId: searchNFTs
      parameters:
      - name: chain
        in: query
        description: The chain to query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/chainList'
      - name: format
        in: query
        description: The format of the token id
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: decimal
          enum:
          - decimal
          - hex
          default: decimal
      - name: q
        in: query
        description: The search string
        required: true
        style: form
        explode: true
        schema:
          maxLength: 256
          minLength: 3
          type: string
      - name: filter
        in: query
        description: What fields the search should match on. To look into the entire
          metadata set the value to 'global'. To have a better response time you can
          look into a specific field like name
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: name
          enum:
          - name
          - description
          - attributes
          - global
          - "name,description"
          - "name,attributes"
          - "description,attributes"
          - "name,description,attributes"
          default: global
      - name: from_block
        in: query
        description: "The minimum block number from where to start the search\n* Provide\
          \ the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block'\
          \ are provided, 'from_block' will be used.\n"
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
      - name: to_block
        in: query
        description: "The maximum block number from where to end the search\n* Provide\
          \ the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block' are provided,\
          \ 'to_block' will be used.\n"
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
      - name: from_date
        in: query
        description: "The date from where to start the search (any format that is\
          \ accepted by momentjs)\n* Provide the param 'from_block' or 'from_date'\n\
          * If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: to_date
        in: query
        description: "Get search results up until this date (any format that is accepted\
          \ by momentjs)\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date'\
          \ and 'to_block' are provided, 'to_block' will be used.\n"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: offset
        in: query
        description: offset
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: limit
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
      responses:
        "200":
          description: Returns the matching NFTs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/nftMetadataCollection'
      security:
      - ApiKeyAuth: []
  /nft/transfers:
    get:
      tags:
      - token
      summary: Gets NFT transfers from a block number to a block number
      description: Gets the transfers of the tokens from a block number to a block
        number
      operationId: getNftTransfersFromToBlock
      parameters:
      - name: chain
        in: query
        description: The chain to query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/chainList'
      - name: from_block
        in: query
        description: "The minimum block number from where to get the transfers\n*\
          \ Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block'\
          \ are provided, 'from_block' will be used.\n"
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
      - name: to_block
        in: query
        description: "The maximum block number from where to get the transfers.\n\
          * Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block'\
          \ are provided, 'to_block' will be used.\n"
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
      - name: from_date
        in: query
        description: "The date from where to get the transfers (any format that is\
          \ accepted by momentjs)\n* Provide the param 'from_block' or 'from_date'\n\
          * If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: to_date
        in: query
        description: "Get transfers up until this date (any format that is accepted\
          \ by momentjs)\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date'\
          \ and 'to_block' are provided, 'to_block' will be used.\n"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: format
        in: query
        description: The format of the token id
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: decimal
          enum:
          - decimal
          - hex
          default: decimal
      - name: offset
        in: query
        description: offset
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: limit
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
      - name: cursor
        in: query
        description: |
          The cursor returned in the last response (for getting the next page)
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Returns a collection of NFT transfers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/nftTransferCollection'
      security:
      - ApiKeyAuth: []
  /nft/{address}:
    get:
      tags:
      - token
      summary: Retrieves the unique NFTs inside a given contract
      description: "Gets data, including metadata (where available), for all token\
        \ ids for the given contract address.\n* Results are sorted by the block the\
        \ token id was minted (descending) and limited to 100 per page by default\n\
        * Requests for contract addresses not yet indexed will automatically start\
        \ the indexing process for that NFT collection\n"
      operationId: getAllTokenIds
      parameters:
      - name: chain
        in: query
        description: The chain to query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/chainList'
      - name: address
        in: path
        description: Address of the contract
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: format
        in: query
        description: The format of the token id
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: decimal
          enum:
          - decimal
          - hex
          default: decimal
      - name: offset
        in: query
        description: offset
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: limit
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
      - name: cursor
        in: query
        description: |
          The cursor returned in the last response (for getting the next page)
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Returns a collection of nfts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/nftCollection'
      security:
      - ApiKeyAuth: []
  /nft/{address}/transfers:
    get:
      tags:
      - token
      summary: Gets NFT transfers of a given contract
      description: Gets the transfers of the tokens matching the given parameters
      operationId: getContractNFTTransfers
      parameters:
      - name: chain
        in: query
        description: The chain to query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/chainList'
      - name: address
        in: path
        description: Address of the contract
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: format
        in: query
        description: The format of the token id
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: decimal
          enum:
          - decimal
          - hex
          default: decimal
      - name: offset
        in: query
        description: offset
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: limit
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
      - name: cursor
        in: query
        description: |
          The cursor returned in the last response (for getting the next page)
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Returns a collection of NFT transfers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/nftTransferCollection'
      security:
      - ApiKeyAuth: []
  /nft/{address}/owners:
    get:
      tags:
      - token
      summary: Gets the owners of the NFTs of a given contract
      description: "Gets all owners of NFT items within a given contract collection\n\
        * Use after /nft/contract/{token_address} to find out who owns each token\
        \ id in a collection\n* Make sure to include a sort parm on a column like\
        \ block_number_minted for consistent pagination results\n* Requests for contract\
        \ addresses not yet indexed will automatically start the indexing process\
        \ for that NFT collection\n"
      operationId: getNFTOwners
      parameters:
      - name: chain
        in: query
        description: The chain to query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/chainList'
      - name: address
        in: path
        description: Address of the contract
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: format
        in: query
        description: The format of the token id
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: decimal
          enum:
          - decimal
          - hex
          default: decimal
      - name: offset
        in: query
        description: offset
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: limit
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
      - name: cursor
        in: query
        description: |
          The cursor returned in the last response (for getting the next page)
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Returns a collection of nft owners
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/nftOwnerCollection'
      security:
      - ApiKeyAuth: []
  /nft/{address}/metadata:
    get:
      tags:
      - token
      summary: Gets the global metadata for a given contract
      description: "Gets the contract level metadata (name, symbol, base token uri)\
        \ for the given contract\n* Requests for contract addresses not yet indexed\
        \ will automatically start the indexing process for that NFT collection\n"
      operationId: getNFTMetadata
      parameters:
      - name: chain
        in: query
        description: The chain to query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/chainList'
      - name: address
        in: path
        description: Address of the contract
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Returns a collection NFT collections.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/nftContractMetadata'
      security:
      - ApiKeyAuth: []
  /nft/{address}/{token_id}/metadata/resync:
    get:
      tags:
      - token
      summary: resync the metadata for a given token_id
      description: |
        ReSync the metadata for an NFT
        * The metadata(default) flag will request a the NFT's metadata from the already existing token_uri
        * The uri flag will fetch the latest token_uri from the given NFT address. In sync mode the metadata will also be fetched
        * The sync mode will make the endpoint synchronous so it will wait for the task to be completed before responding
        * The async mode(default) will make the endpoint asynchronous so we will wait for the task to be completed before responding
      operationId: reSyncMetadata
      parameters:
      - name: chain
        in: query
        description: The chain to query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/chainList'
      - name: address
        in: path
        description: Address of the contract
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: token_id
        in: path
        description: The id of the token
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: flag
        in: query
        description: The type of resync to operate
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: uri
          enum:
          - uri
          - metadata
          default: metadata
      - name: mode
        in: query
        description: To define the behaviour of the endpoint
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: sync
          enum:
          - async
          - sync
          default: async
      responses:
        "200":
          description: (In sync mode) Resync request executed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/metadataResync'
        "202":
          description: The resync request was received and will be executed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/metadataResync'
        "404":
          description: (In sync mode) Resync request executed and metadata could not
            be updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/metadataResync'
      security:
      - ApiKeyAuth: []
  /nft/{address}/sync:
    put:
      tags:
      - token
      summary: Sync a Contract for NFT Index
      description: |
        Sync a Contract for NFT Index
      operationId: syncNFTContract
      parameters:
      - name: chain
        in: query
        description: The chain to query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/chainList'
      - name: address
        in: path
        description: Address of the contract
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "201":
          description: Contract Address was triggered for index.
      security:
      - ApiKeyAuth: []
  /nft/{address}/{token_id}:
    get:
      tags:
      - token
      summary: Gets the NFT with the given id of a given contract
      description: "Gets data, including metadata (where available), for the given\
        \ token id of the given contract address.\n* Requests for contract addresses\
        \ not yet indexed will automatically start the indexing process for that NFT\
        \ collection\n"
      operationId: getTokenIdMetadata
      parameters:
      - name: chain
        in: query
        description: The chain to query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/chainList'
      - name: address
        in: path
        description: Address of the contract
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: token_id
        in: path
        description: The id of the token
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: format
        in: query
        description: The format of the token id
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: decimal
          enum:
          - decimal
          - hex
          default: decimal
      responses:
        "200":
          description: Returns the specified NFT
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/nft'
      security:
      - ApiKeyAuth: []
  /nft/{address}/{token_id}/owners:
    get:
      tags:
      - token
      summary: Gets the owners of NFTs for a given contract
      description: "Gets all owners of NFT items within a given contract collection\n\
        * Use after /nft/contract/{token_address} to find out who owns each token\
        \ id in a collection\n* Make sure to include a sort parm on a column like\
        \ block_number_minted for consistent pagination results\n* Requests for contract\
        \ addresses not yet indexed will automatically start the indexing process\
        \ for that NFT collection\n"
      operationId: getTokenIdOwners
      parameters:
      - name: chain
        in: query
        description: The chain to query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/chainList'
      - name: address
        in: path
        description: Address of the contract
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: token_id
        in: path
        description: The id of the token
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: format
        in: query
        description: The format of the token id
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: decimal
          enum:
          - decimal
          - hex
          default: decimal
      - name: offset
        in: query
        description: offset
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: limit
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
      - name: cursor
        in: query
        description: |
          The cursor returned in the last response (for getting the next page)
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Returns a collection of NFTs with their respective owners
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/nftOwnerCollection'
      security:
      - ApiKeyAuth: []
  /nft/{address}/{token_id}/transfers:
    get:
      tags:
      - token
      summary: Gets NFT transfers of a given contract
      description: Gets the transfers of the tokens matching the given parameters
      operationId: getWalletTokenIdTransfers
      parameters:
      - name: chain
        in: query
        description: The chain to query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/chainList'
      - name: address
        in: path
        description: Address of the contract
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: token_id
        in: path
        description: The id of the token
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: format
        in: query
        description: The format of the token id
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: decimal
          enum:
          - decimal
          - hex
          default: decimal
      - name: offset
        in: query
        description: offset
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: limit
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
      - name: order
        in: query
        description: "The field(s) to order on and if it should be ordered in ascending\
          \ or descending order. Specified by: fieldName1.order,fieldName2.order.\
          \ Example 1: \"block_number\", \"block_number.ASC\", \"block_number.DESC\"\
          , Example 2: \"block_number and contract_type\", \"block_number.ASC,contract_type.DESC\""
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: cursor
        in: query
        description: |
          The cursor returned in the last response (for getting the next page)
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Returns a collection of NFT transfers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/nftTransferCollection'
      security:
      - ApiKeyAuth: []
  /resolve/{domain}:
    get:
      tags:
      - resolve
      summary: Resolves an Unstoppable domain and returns the address
      description: |
        Resolves an Unstoppable domain and returns the address
      operationId: resolveDomain
      parameters:
      - name: currency
        in: query
        description: The currency to query
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: eth
          enum:
          - eth
          - 0x1
          default: eth
      - name: domain
        in: path
        description: Domain to be resolved
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: brad.crypto
      responses:
        "200":
          description: Returns an address
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resolve'
        "404":
          description: Returns an address
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
      security:
      - ApiKeyAuth: []
  /resolve/{address}/reverse:
    get:
      tags:
      - resolve
      summary: Return the ENS domain when available (Only for ETH)
      description: |
        Resolves an ETH address and find the ENS name
      operationId: resolveAddress
      parameters:
      - name: address
        in: path
        description: The address to be resolved
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045
      responses:
        "200":
          description: Returns an ENS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ens'
      security:
      - ApiKeyAuth: []
  /{pair_address}/reserves:
    get:
      tags:
      - defi
      summary: Get liquidity pair reserves for an Uniswap V2 based Exchange.
      description: Get the liquidity reserves for a given pair address. Only Uniswap
        V2 based exchanges supported at the moment.
      operationId: getPairReserves
      parameters:
      - name: chain
        in: query
        description: The chain to query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/chainList'
      - name: to_block
        in: query
        description: To get the reserves at this block number
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: to_date
        in: query
        description: "Get the reserves to this date (any format that is accepted by\
          \ momentjs)\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date'\
          \ and 'to_block' are provided, 'to_block' will be used.\n"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: provider_url
        in: query
        description: web3 provider url to user when using local dev chain
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: pair_address
        in: path
        description: Liquidity pair address
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 0xa2107fa5b38d9bbd2c461d6edf11b11a50f6b974
      responses:
        "200":
          description: Returns the pair reserves
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reservesCollection'
      security:
      - ApiKeyAuth: []
  /{token0_address}/{token1_address}/pairAddress:
    get:
      tags:
      - defi
      summary: Get pair address based on token0 and token1 address
      description: |
        Fetches and returns pair data of the provided token0+token1 combination.
        The token0 and token1 options are interchangable (ie. there is no different outcome in "token0=WETH and token1=USDT" or "token0=USDT and token1=WETH")
      operationId: getPairAddress
      parameters:
      - name: chain
        in: query
        description: The chain to query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/chainList'
      - name: to_block
        in: query
        description: To get the reserves at this block number
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: to_date
        in: query
        description: "Get the reserves to this date (any format that is accepted by\
          \ momentjs)\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date'\
          \ and 'to_block' are provided, 'to_block' will be used.\n"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: exchange
        in: query
        description: The factory name or address of the token exchange
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: uniswapv2
          enum:
          - uniswapv2
          - uniswapv3
          - sushiswapv2
          - pancakeswapv2
          - pancakeswapv1
          - quickswap
      - name: token0_address
        in: path
        description: Token0 address
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 0x2b591e99afe9f32eaa6214f7b7629768c40eeb39
      - name: token1_address
        in: path
        description: Token1 address
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 0xdac17f958d2ee523a2206206994597c13d831ec7
      responses:
        "200":
          description: Returns the pair address of the two tokens
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reservesCollection'
      security:
      - ApiKeyAuth: []
  /ipfs/uploadFolder:
    post:
      tags:
      - storage
      summary: Uploads multiple files and place them in a folder directory
      description: |
        Uploads multiple files and place them in a folder directory
      operationId: uploadFolder
      requestBody:
        description: Array of JSON and Base64 Supported
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ipfsFileRequest'
        required: false
      responses:
        "200":
          description: Returns the path to the uploaded files
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ipfsFile'
                x-content-type: application/json
      security:
      - ApiKeyAuth: []
  /web3/version:
    get:
      tags:
      - info
      summary: Returns the web3 api version
      operationId: web3ApiVersion
      responses:
        "200":
          description: Returns the web3 api version
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/web3version'
      security:
      - ApiKeyAuth: []
components:
  schemas:
    logEventByAddress:
      required:
      - address
      - block_hash
      - block_number
      - block_timestamp
      - data
      - topic0
      - topic1
      - topic2
      - topic3
      - transaction_hash
      properties:
        transaction_hash:
          type: string
          description: The transaction hash
          example: 0x2d30ca6f024dbc1307ac8a1a44ca27de6f797ec22ef20627a1307243b0ab7d09
        address:
          type: string
          description: The address of the contract
          example: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
        block_timestamp:
          type: string
          description: The block timestamp
          example: 2021-04-02T10:07:54.000Z
        block_number:
          type: string
          description: The block number
          example: "12526958"
        block_hash:
          type: string
          description: The block hash
          example: 0x0372c302e3c52e8f2e15d155e2c545e6d802e479236564af052759253b20fd86
        data:
          type: string
          description: The data of the log
          example: 0x00000000000000000000000000000000000000000000000de05239bccd4d537400000000000000000000000000024dbc80a9f80e3d5fc0a0ee30e2693781a443
        topic0:
          type: string
          example: 0x2caecd17d02f56fa897705dcc740da2d237c373f70686f4e0d9bd3bf0400ea7a
        topic1:
          type: string
          example: 0x000000000000000000000000031002d15b0d0cd7c9129d6f644446368deae391
        topic2:
          type: string
          example: 0x000000000000000000000000d25943be09f968ba740e0782a34e710100defae9
        topic3:
          type: string
      example:
        topic1: 0x000000000000000000000000031002d15b0d0cd7c9129d6f644446368deae391
        topic2: 0x000000000000000000000000d25943be09f968ba740e0782a34e710100defae9
        address: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
        topic0: 0x2caecd17d02f56fa897705dcc740da2d237c373f70686f4e0d9bd3bf0400ea7a
        data: 0x00000000000000000000000000000000000000000000000de05239bccd4d537400000000000000000000000000024dbc80a9f80e3d5fc0a0ee30e2693781a443
        topic3: topic3
        block_timestamp: 2021-04-02T10:07:54.000Z
        block_number: "12526958"
        block_hash: 0x0372c302e3c52e8f2e15d155e2c545e6d802e479236564af052759253b20fd86
        transaction_hash: 0x2d30ca6f024dbc1307ac8a1a44ca27de6f797ec22ef20627a1307243b0ab7d09
    logEvent:
      required:
      - address
      - block_hash
      - block_number
      - block_timestamp
      - data
      - transaction_hash
      properties:
        transaction_hash:
          type: string
          description: The transaction hash
          example: 0x2d30ca6f024dbc1307ac8a1a44ca27de6f797ec22ef20627a1307243b0ab7d09
        address:
          type: string
          description: The address of the contract
          example: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
        block_timestamp:
          type: string
          description: The block timestamp
          example: 2021-04-02T10:07:54.000Z
        block_number:
          type: string
          description: The block number
          example: "12526958"
        block_hash:
          type: string
          description: The block hash
          example: 0x0372c302e3c52e8f2e15d155e2c545e6d802e479236564af052759253b20fd86
        data:
          type: object
          description: The content of the event
      example:
        address: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
        data: {}
        block_timestamp: 2021-04-02T10:07:54.000Z
        block_number: "12526958"
        block_hash: 0x0372c302e3c52e8f2e15d155e2c545e6d802e479236564af052759253b20fd86
        transaction_hash: 0x2d30ca6f024dbc1307ac8a1a44ca27de6f797ec22ef20627a1307243b0ab7d09
    log:
      required:
      - address
      - block_hash
      - block_number
      - block_timestamp
      - data
      - log_index
      - topic0
      - transaction_hash
      - transaction_index
      properties:
        log_index:
          type: string
          example: "273"
        transaction_hash:
          type: string
          description: The hash of the transaction
          example: 0xdd9006489e46670e0e85d1fb88823099e7f596b08aeaac023e9da0851f26fdd5
        transaction_index:
          type: string
          example: "204"
        address:
          type: string
          description: The address of the contract
          example: 0x3105d328c66d8d55092358cf595d54608178e9b5
        data:
          type: string
          description: The data of the log
          example: 0x00000000000000000000000000000000000000000000000de05239bccd4d537400000000000000000000000000024dbc80a9f80e3d5fc0a0ee30e2693781a443
        topic0:
          type: string
          example: 0x2caecd17d02f56fa897705dcc740da2d237c373f70686f4e0d9bd3bf0400ea7a
        topic1:
          type: string
          example: 0x000000000000000000000000031002d15b0d0cd7c9129d6f644446368deae391
        topic2:
          type: string
          example: 0x000000000000000000000000d25943be09f968ba740e0782a34e710100defae9
        topic3:
          type: string
        block_timestamp:
          type: string
          description: The timestamp of the block
          example: 2021-05-07T11:08:35.000Z
        block_number:
          type: string
          description: The block number
          example: "12386788"
        block_hash:
          type: string
          description: The hash of the block
          example: 0x9b559aef7ea858608c2e554246fe4a24287e7aeeb976848df2b9a2531f4b9171
      example:
        topic1: 0x000000000000000000000000031002d15b0d0cd7c9129d6f644446368deae391
        topic2: 0x000000000000000000000000d25943be09f968ba740e0782a34e710100defae9
        address: 0x3105d328c66d8d55092358cf595d54608178e9b5
        topic0: 0x2caecd17d02f56fa897705dcc740da2d237c373f70686f4e0d9bd3bf0400ea7a
        data: 0x00000000000000000000000000000000000000000000000de05239bccd4d537400000000000000000000000000024dbc80a9f80e3d5fc0a0ee30e2693781a443
        topic3: topic3
        block_timestamp: 2021-05-07T11:08:35.000Z
        block_number: "12386788"
        block_hash: 0x9b559aef7ea858608c2e554246fe4a24287e7aeeb976848df2b9a2531f4b9171
        transaction_index: "204"
        log_index: "273"
        transaction_hash: 0xdd9006489e46670e0e85d1fb88823099e7f596b08aeaac023e9da0851f26fdd5
    blockTransaction:
      required:
      - block_hash
      - block_number
      - block_timestamp
      - from_address
      - gas_price
      - hash
      - input
      - logs
      - nonce
      - receipt_cumulative_gas_used
      - receipt_gas_used
      - receipt_status
      - to_address
      - transaction_index
      - value
      properties:
        hash:
          type: string
          description: The hash of the transaction
          example: 0x1ed85b3757a6d31d01a4d6677fc52fd3911d649a0af21fe5ca3f886b153773ed
        nonce:
          type: string
          description: The nonce
          example: "1848059"
        transaction_index:
          type: string
          example: "108"
        from_address:
          type: string
          description: The from address
          example: 0x267be1c1d684f78cb4f6a176c4911b741e4ffdc0
        to_address:
          type: string
          description: The to address
          example: 0x003dde3494f30d861d063232c6a8c04394b686ff
        value:
          type: string
          description: The value sent
          example: "115580000000000000"
        gas:
          type: string
          example: "30000"
        gas_price:
          type: string
          description: The gas price
          example: "52500000000"
        input:
          type: string
          example: 0x
        receipt_cumulative_gas_used:
          type: string
          example: "4923073"
        receipt_gas_used:
          type: string
          example: "21000"
        receipt_contract_address:
          type: string
        receipt_root:
          type: string
        receipt_status:
          type: string
          example: "1"
        block_timestamp:
          type: string
          description: The block timestamp
          example: 2021-05-07T11:08:35.000Z
        block_number:
          type: string
          description: The block number
          example: "12386788"
        block_hash:
          type: string
          description: The hash of the block
          example: 0x9b559aef7ea858608c2e554246fe4a24287e7aeeb976848df2b9a2531f4b9171
        logs:
          type: array
          description: The logs of the transaction
          items:
            $ref: '#/components/schemas/log'
      example:
        gas_price: "52500000000"
        receipt_status: "1"
        receipt_cumulative_gas_used: "4923073"
        receipt_contract_address: receipt_contract_address
        block_number: "12386788"
        block_hash: 0x9b559aef7ea858608c2e554246fe4a24287e7aeeb976848df2b9a2531f4b9171
        to_address: 0x003dde3494f30d861d063232c6a8c04394b686ff
        transaction_index: "108"
        nonce: "1848059"
        input: 0x
        receipt_gas_used: "21000"
        block_timestamp: 2021-05-07T11:08:35.000Z
        gas: "30000"
        from_address: 0x267be1c1d684f78cb4f6a176c4911b741e4ffdc0
        value: "115580000000000000"
        receipt_root: receipt_root
        logs:
        - topic1: 0x000000000000000000000000031002d15b0d0cd7c9129d6f644446368deae391
          topic2: 0x000000000000000000000000d25943be09f968ba740e0782a34e710100defae9
          address: 0x3105d328c66d8d55092358cf595d54608178e9b5
          topic0: 0x2caecd17d02f56fa897705dcc740da2d237c373f70686f4e0d9bd3bf0400ea7a
          data: 0x00000000000000000000000000000000000000000000000de05239bccd4d537400000000000000000000000000024dbc80a9f80e3d5fc0a0ee30e2693781a443
          topic3: topic3
          block_timestamp: 2021-05-07T11:08:35.000Z
          block_number: "12386788"
          block_hash: 0x9b559aef7ea858608c2e554246fe4a24287e7aeeb976848df2b9a2531f4b9171
          transaction_index: "204"
          log_index: "273"
          transaction_hash: 0xdd9006489e46670e0e85d1fb88823099e7f596b08aeaac023e9da0851f26fdd5
        - topic1: 0x000000000000000000000000031002d15b0d0cd7c9129d6f644446368deae391
          topic2: 0x000000000000000000000000d25943be09f968ba740e0782a34e710100defae9
          address: 0x3105d328c66d8d55092358cf595d54608178e9b5
          topic0: 0x2caecd17d02f56fa897705dcc740da2d237c373f70686f4e0d9bd3bf0400ea7a
          data: 0x00000000000000000000000000000000000000000000000de05239bccd4d537400000000000000000000000000024dbc80a9f80e3d5fc0a0ee30e2693781a443
          topic3: topic3
          block_timestamp: 2021-05-07T11:08:35.000Z
          block_number: "12386788"
          block_hash: 0x9b559aef7ea858608c2e554246fe4a24287e7aeeb976848df2b9a2531f4b9171
          transaction_index: "204"
          log_index: "273"
          transaction_hash: 0xdd9006489e46670e0e85d1fb88823099e7f596b08aeaac023e9da0851f26fdd5
        hash: 0x1ed85b3757a6d31d01a4d6677fc52fd3911d649a0af21fe5ca3f886b153773ed
    block:
      required:
      - difficulty
      - extra_data
      - gas_limit
      - gas_used
      - hash
      - logs_bloom
      - miner
      - nonce
      - number
      - parent_hash
      - receipts_root
      - sha3_uncles
      - size
      - state_root
      - timestamp
      - total_difficulty
      - transaction_count
      - transactions
      - transactions_root
      properties:
        timestamp:
          type: string
          description: The block timestamp
          example: 2021-05-07T11:08:35.000Z
        number:
          type: string
          description: The block number
          example: "12386788"
        hash:
          type: string
          description: The block hash
          example: 0x9b559aef7ea858608c2e554246fe4a24287e7aeeb976848df2b9a2531f4b9171
        parent_hash:
          type: string
          description: The block hash of the parent block
          example: 0x011d1fc45839de975cc55d758943f9f1d204f80a90eb631f3bf064b80d53e045
        nonce:
          type: string
          description: The nonce
          example: 0xedeb2d8fd2b2bdec
        sha3_uncles:
          type: string
          example: 0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347
        logs_bloom:
          type: string
          example: 0xdde5fc46c5d8bcbd58207bc9f267bf43298e23791a326ff02661e99790da9996b3e0dd912c0b8202d389d282c56e4d11eb2dec4898a32b6b165f1f4cae6aa0079498eab50293f3b8defbf6af11bb75f0408a563ddfc26a3323d1ff5f9849e95d5f034d88a757ddea032c75c00708c9ff34d2207f997cc7d93fd1fa160a6bfaf62a54e31f9fe67ab95752106ba9d185bfdc9b6dc3e17427f844ee74e5c09b17b83ad6e8fc7360f5c7c3e4e1939e77a6374bee57d1fa6b2322b11ad56ad0398302de9b26d6fbfe414aa416bff141fad9d4af6aea19322e47595e342cd377403f417dfd396ab5f151095a5535f51cbc34a40ce9648927b7d1d72ab9daf253e31daf
        transactions_root:
          type: string
          example: 0xe4c7bf3aff7ad07f9e80d57f7189f0252592fee6321c2a9bd9b09b6ce0690d27
        state_root:
          type: string
          example: 0x49e3bfe7b618e27fde8fa08884803a8458b502c6534af69873a3cc926a7c724b
        receipts_root:
          type: string
          example: 0x7cf43d7e837284f036cf92c56973f5e27bdd253ca46168fa195a6b07fa719f23
        miner:
          type: string
          description: The address of the miner
          example: 0xea674fdde714fd979de3edf0f56aa9716b898ec8
        difficulty:
          type: string
          description: The difficulty of the block
          example: "7253857437305950"
        total_difficulty:
          type: string
          description: The total difficulty
          example: "24325637817906576196890"
        size:
          type: string
          description: The block size
          example: "61271"
        extra_data:
          type: string
          example: 0x65746865726d696e652d6575726f70652d7765737433
        gas_limit:
          type: string
          description: The gas limit
          example: "14977947"
        gas_used:
          type: string
          description: The gas used
          example: "14964688"
        transaction_count:
          type: string
          description: The number of transactions in the block
          example: "252"
        transactions:
          type: array
          description: The transactions in the block
          items:
            $ref: '#/components/schemas/blockTransaction'
      example:
        sha3_uncles: 0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347
        gas_used: "14964688"
        transaction_count: "252"
        receipts_root: 0x7cf43d7e837284f036cf92c56973f5e27bdd253ca46168fa195a6b07fa719f23
        total_difficulty: "24325637817906576196890"
        transactions:
        - gas_price: "52500000000"
          receipt_status: "1"
          receipt_cumulative_gas_used: "4923073"
          receipt_contract_address: receipt_contract_address
          block_number: "12386788"
          block_hash: 0x9b559aef7ea858608c2e554246fe4a24287e7aeeb976848df2b9a2531f4b9171
          to_address: 0x003dde3494f30d861d063232c6a8c04394b686ff
          transaction_index: "108"
          nonce: "1848059"
          input: 0x
          receipt_gas_used: "21000"
          block_timestamp: 2021-05-07T11:08:35.000Z
          gas: "30000"
          from_address: 0x267be1c1d684f78cb4f6a176c4911b741e4ffdc0
          value: "115580000000000000"
          receipt_root: receipt_root
          logs:
          - topic1: 0x000000000000000000000000031002d15b0d0cd7c9129d6f644446368deae391
            topic2: 0x000000000000000000000000d25943be09f968ba740e0782a34e710100defae9
            address: 0x3105d328c66d8d55092358cf595d54608178e9b5
            topic0: 0x2caecd17d02f56fa897705dcc740da2d237c373f70686f4e0d9bd3bf0400ea7a
            data: 0x00000000000000000000000000000000000000000000000de05239bccd4d537400000000000000000000000000024dbc80a9f80e3d5fc0a0ee30e2693781a443
            topic3: topic3
            block_timestamp: 2021-05-07T11:08:35.000Z
            block_number: "12386788"
            block_hash: 0x9b559aef7ea858608c2e554246fe4a24287e7aeeb976848df2b9a2531f4b9171
            transaction_index: "204"
            log_index: "273"
            transaction_hash: 0xdd9006489e46670e0e85d1fb88823099e7f596b08aeaac023e9da0851f26fdd5
          - topic1: 0x000000000000000000000000031002d15b0d0cd7c9129d6f644446368deae391
            topic2: 0x000000000000000000000000d25943be09f968ba740e0782a34e710100defae9
            address: 0x3105d328c66d8d55092358cf595d54608178e9b5
            topic0: 0x2caecd17d02f56fa897705dcc740da2d237c373f70686f4e0d9bd3bf0400ea7a
            data: 0x00000000000000000000000000000000000000000000000de05239bccd4d537400000000000000000000000000024dbc80a9f80e3d5fc0a0ee30e2693781a443
            topic3: topic3
            block_timestamp: 2021-05-07T11:08:35.000Z
            block_number: "12386788"
            block_hash: 0x9b559aef7ea858608c2e554246fe4a24287e7aeeb976848df2b9a2531f4b9171
            transaction_index: "204"
            log_index: "273"
            transaction_hash: 0xdd9006489e46670e0e85d1fb88823099e7f596b08aeaac023e9da0851f26fdd5
          hash: 0x1ed85b3757a6d31d01a4d6677fc52fd3911d649a0af21fe5ca3f886b153773ed
        - gas_price: "52500000000"
          receipt_status: "1"
          receipt_cumulative_gas_used: "4923073"
          receipt_contract_address: receipt_contract_address
          block_number: "12386788"
          block_hash: 0x9b559aef7ea858608c2e554246fe4a24287e7aeeb976848df2b9a2531f4b9171
          to_address: 0x003dde3494f30d861d063232c6a8c04394b686ff
          transaction_index: "108"
          nonce: "1848059"
          input: 0x
          receipt_gas_used: "21000"
          block_timestamp: 2021-05-07T11:08:35.000Z
          gas: "30000"
          from_address: 0x267be1c1d684f78cb4f6a176c4911b741e4ffdc0
          value: "115580000000000000"
          receipt_root: receipt_root
          logs:
          - topic1: 0x000000000000000000000000031002d15b0d0cd7c9129d6f644446368deae391
            topic2: 0x000000000000000000000000d25943be09f968ba740e0782a34e710100defae9
            address: 0x3105d328c66d8d55092358cf595d54608178e9b5
            topic0: 0x2caecd17d02f56fa897705dcc740da2d237c373f70686f4e0d9bd3bf0400ea7a
            data: 0x00000000000000000000000000000000000000000000000de05239bccd4d537400000000000000000000000000024dbc80a9f80e3d5fc0a0ee30e2693781a443
            topic3: topic3
            block_timestamp: 2021-05-07T11:08:35.000Z
            block_number: "12386788"
            block_hash: 0x9b559aef7ea858608c2e554246fe4a24287e7aeeb976848df2b9a2531f4b9171
            transaction_index: "204"
            log_index: "273"
            transaction_hash: 0xdd9006489e46670e0e85d1fb88823099e7f596b08aeaac023e9da0851f26fdd5
          - topic1: 0x000000000000000000000000031002d15b0d0cd7c9129d6f644446368deae391
            topic2: 0x000000000000000000000000d25943be09f968ba740e0782a34e710100defae9
            address: 0x3105d328c66d8d55092358cf595d54608178e9b5
            topic0: 0x2caecd17d02f56fa897705dcc740da2d237c373f70686f4e0d9bd3bf0400ea7a
            data: 0x00000000000000000000000000000000000000000000000de05239bccd4d537400000000000000000000000000024dbc80a9f80e3d5fc0a0ee30e2693781a443
            topic3: topic3
            block_timestamp: 2021-05-07T11:08:35.000Z
            block_number: "12386788"
            block_hash: 0x9b559aef7ea858608c2e554246fe4a24287e7aeeb976848df2b9a2531f4b9171
            transaction_index: "204"
            log_index: "273"
            transaction_hash: 0xdd9006489e46670e0e85d1fb88823099e7f596b08aeaac023e9da0851f26fdd5
          hash: 0x1ed85b3757a6d31d01a4d6677fc52fd3911d649a0af21fe5ca3f886b153773ed
        nonce: 0xedeb2d8fd2b2bdec
        miner: 0xea674fdde714fd979de3edf0f56aa9716b898ec8
        difficulty: "7253857437305950"
        number: "12386788"
        logs_bloom: 0xdde5fc46c5d8bcbd58207bc9f267bf43298e23791a326ff02661e99790da9996b3e0dd912c0b8202d389d282c56e4d11eb2dec4898a32b6b165f1f4cae6aa0079498eab50293f3b8defbf6af11bb75f0408a563ddfc26a3323d1ff5f9849e95d5f034d88a757ddea032c75c00708c9ff34d2207f997cc7d93fd1fa160a6bfaf62a54e31f9fe67ab95752106ba9d185bfdc9b6dc3e17427f844ee74e5c09b17b83ad6e8fc7360f5c7c3e4e1939e77a6374bee57d1fa6b2322b11ad56ad0398302de9b26d6fbfe414aa416bff141fad9d4af6aea19322e47595e342cd377403f417dfd396ab5f151095a5535f51cbc34a40ce9648927b7d1d72ab9daf253e31daf
        gas_limit: "14977947"
        size: "61271"
        extra_data: 0x65746865726d696e652d6575726f70652d7765737433
        transactions_root: 0xe4c7bf3aff7ad07f9e80d57f7189f0252592fee6321c2a9bd9b09b6ce0690d27
        hash: 0x9b559aef7ea858608c2e554246fe4a24287e7aeeb976848df2b9a2531f4b9171
        parent_hash: 0x011d1fc45839de975cc55d758943f9f1d204f80a90eb631f3bf064b80d53e045
        state_root: 0x49e3bfe7b618e27fde8fa08884803a8458b502c6534af69873a3cc926a7c724b
        timestamp: 2021-05-07T11:08:35.000Z
    blockDate:
      required:
      - block
      - date
      - timestamp
      properties:
        date:
          type: string
          description: The date of the block
          example: 2020-01-01T00:00:00+00:00
        block:
          type: number
          description: The blocknumber
          example: 9193266
        timestamp:
          type: number
          description: The timestamp of the block
          example: 1577836811
      example:
        date: 2020-01-01T00:00:00+00:00
        block: 9193266
        timestamp: 1577836811
    RunContractDto:
      required:
      - abi
      properties:
        abi:
          type: object
          description: The contract abi
          example: []
        params:
          type: object
          description: The params for the given function
          example: {}
    transactionCollection:
      properties:
        total:
          type: integer
          description: The total number of matches for this query
          example: 2000
        page:
          type: integer
          description: The page of the current result
          example: 2
        page_size:
          type: integer
          description: The number of results per page
          example: 100
        result:
          type: array
          items:
            $ref: '#/components/schemas/transaction'
      example:
        result:
        - gas_price: "20000000000"
          receipt_status: "1"
          receipt_cumulative_gas_used: "1340925"
          receipt_contract_address: 0x1d6a4cf64b52f6c73f201839aded7379ce58059c
          block_number: "12526958"
          block_hash: 0x0372c302e3c52e8f2e15d155e2c545e6d802e479236564af052759253b20fd86
          to_address: 0xa71db868318f0a0bae9411347cd4a6fa23d8d4ef
          transaction_index: "25"
          nonce: "326595425"
          input: input
          receipt_gas_used: "1340925"
          block_timestamp: 2021-04-02T10:07:54.000Z
          gas: "6721975"
          from_address: 0xd4a3BebD824189481FC45363602b83C9c7e9cbDf
          value: "650000000000000000"
          receipt_root: receipt_root
          hash: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
        - gas_price: "20000000000"
          receipt_status: "1"
          receipt_cumulative_gas_used: "1340925"
          receipt_contract_address: 0x1d6a4cf64b52f6c73f201839aded7379ce58059c
          block_number: "12526958"
          block_hash: 0x0372c302e3c52e8f2e15d155e2c545e6d802e479236564af052759253b20fd86
          to_address: 0xa71db868318f0a0bae9411347cd4a6fa23d8d4ef
          transaction_index: "25"
          nonce: "326595425"
          input: input
          receipt_gas_used: "1340925"
          block_timestamp: 2021-04-02T10:07:54.000Z
          gas: "6721975"
          from_address: 0xd4a3BebD824189481FC45363602b83C9c7e9cbDf
          value: "650000000000000000"
          receipt_root: receipt_root
          hash: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
        total: 2000
        page: 2
        page_size: 100
    transaction:
      required:
      - block_hash
      - block_number
      - block_timestamp
      - from_address
      - gas
      - gas_price
      - hash
      - input
      - nonce
      - receipt_contract_address
      - receipt_cumulative_gas_used
      - receipt_gas_used
      - receipt_root
      - receipt_status
      - to_address
      - transaction_index
      - value
      properties:
        hash:
          type: string
          description: The hash of the transaction
          example: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
        nonce:
          type: string
          description: The nonce of the transaction
          example: "326595425"
        transaction_index:
          type: string
          description: The transaction index
          example: "25"
        from_address:
          type: string
          description: The sender
          example: 0xd4a3BebD824189481FC45363602b83C9c7e9cbDf
        to_address:
          type: string
          description: The recipient
          example: 0xa71db868318f0a0bae9411347cd4a6fa23d8d4ef
        value:
          type: string
          description: The value that was transfered (in wei)
          example: "650000000000000000"
        gas:
          type: string
          description: The gas of the transaction
          example: "6721975"
        gas_price:
          type: string
          description: The gas price
          example: "20000000000"
        input:
          type: string
          description: The input
        receipt_cumulative_gas_used:
          type: string
          description: The receipt cumulative gas used
          example: "1340925"
        receipt_gas_used:
          type: string
          description: The receipt gas used
          example: "1340925"
        receipt_contract_address:
          type: string
          description: The receipt contract address
          example: 0x1d6a4cf64b52f6c73f201839aded7379ce58059c
        receipt_root:
          type: string
          description: The receipt root
        receipt_status:
          type: string
          description: The receipt status
          example: "1"
        block_timestamp:
          type: string
          description: The block timestamp
          example: 2021-04-02T10:07:54.000Z
        block_number:
          type: string
          description: The block number
          example: "12526958"
        block_hash:
          type: string
          description: The block hash
          example: 0x0372c302e3c52e8f2e15d155e2c545e6d802e479236564af052759253b20fd86
      example:
        gas_price: "20000000000"
        receipt_status: "1"
        receipt_cumulative_gas_used: "1340925"
        receipt_contract_address: 0x1d6a4cf64b52f6c73f201839aded7379ce58059c
        block_number: "12526958"
        block_hash: 0x0372c302e3c52e8f2e15d155e2c545e6d802e479236564af052759253b20fd86
        to_address: 0xa71db868318f0a0bae9411347cd4a6fa23d8d4ef
        transaction_index: "25"
        nonce: "326595425"
        input: input
        receipt_gas_used: "1340925"
        block_timestamp: 2021-04-02T10:07:54.000Z
        gas: "6721975"
        from_address: 0xd4a3BebD824189481FC45363602b83C9c7e9cbDf
        value: "650000000000000000"
        receipt_root: receipt_root
        hash: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
    erc20Allowance:
      required:
      - allowance
      properties:
        allowance:
          type: string
          description: The allowance
      example:
        allowance: allowance
    erc20TokenBalance:
      required:
      - balance
      - decimals
      - name
      - symbol
      - token_address
      properties:
        token_address:
          type: string
          description: The address of the token contract
          example: 0x2d30ca6f024dbc1307ac8a1a44ca27de6f797ec22ef20627a1307243b0ab7d09
        name:
          type: string
          description: The name of the token Contract
          example: Kylin Network
        symbol:
          type: string
          description: The symbol of the NFT contract
          example: KYL
        logo:
          type: string
          description: The logo of the token
          example: https://cdn.moralis.io/eth/0x67b6d479c7bb412c54e03dca8e1bc6740ce6b99c.png
        thumbnail:
          type: string
          description: The thumbnail of the logo
          example: https://cdn.moralis.io/eth/0x67b6d479c7bb412c54e03dca8e1bc6740ce6b99c_thumb.png
        decimals:
          type: string
          description: The number of decimals on of the token
          example: "18"
        balance:
          type: string
          description: Timestamp of when the contract was last synced with the node
          example: "123456789"
      example:
        symbol: KYL
        thumbnail: https://cdn.moralis.io/eth/0x67b6d479c7bb412c54e03dca8e1bc6740ce6b99c_thumb.png
        balance: "123456789"
        decimals: "18"
        name: Kylin Network
        logo: https://cdn.moralis.io/eth/0x67b6d479c7bb412c54e03dca8e1bc6740ce6b99c.png
        token_address: 0x2d30ca6f024dbc1307ac8a1a44ca27de6f797ec22ef20627a1307243b0ab7d09
    nativeBalance:
      required:
      - balance
      properties:
        balance:
          type: string
          description: The balance
          example: "1234567890"
      example:
        balance: "1234567890"
    trade:
      required:
      - block_hash
      - block_number
      - block_timestamp
      - buyer_address
      - marketplace_address
      - price
      - seller_address
      - token_address
      - token_ids
      - transaction_hash
      - transaction_index
      properties:
        transaction_hash:
          type: string
          description: The transaction hash
          example: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
        transaction_index:
          type: string
          description: The transaction index
        token_ids:
          type: array
          description: The token id(s) traded
          example:
          - "15"
          - "54"
        seller_address:
          type: string
          description: The address that sold the NFT
          example: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
        buyer_address:
          type: string
          description: The address that bought the NFT
          example: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
        marketplace_address:
          type: string
          description: The address of the contract that traded the NFT
          example: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
        price:
          type: string
          description: The value that was sent in the transaction (ETH/BNB/etc..)
          example: "1000000000000000"
        block_timestamp:
          type: string
          description: The block timestamp
          example: 2021-06-04T16:00:15
        block_number:
          type: string
          description: The blocknumber of the transaction
          example: "13680123"
        block_hash:
          type: string
          description: The block hash
          example: 0x4a7c916ca4a970358b9df90051008f729685ff05e9724a9dddba32630c37cb96
      example:
        token_ids:
        - "15"
        - "54"
        buyer_address: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
        price: "1000000000000000"
        block_timestamp: 2021-06-04T16:00:15
        marketplace_address: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
        block_number: "13680123"
        block_hash: 0x4a7c916ca4a970358b9df90051008f729685ff05e9724a9dddba32630c37cb96
        transaction_index: transaction_index
        transaction_hash: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
        seller_address: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
    tradeCollection:
      properties:
        total:
          type: integer
          description: The total number of matches for this query
          example: 2000
        page:
          type: integer
          description: The page of the current result
          example: 2
        page_size:
          type: integer
          description: The number of results per page
          example: 100
        result:
          type: array
          items:
            $ref: '#/components/schemas/trade'
      example:
        result:
        - token_ids:
          - "15"
          - "54"
          buyer_address: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
          price: "1000000000000000"
          block_timestamp: 2021-06-04T16:00:15
          marketplace_address: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
          block_number: "13680123"
          block_hash: 0x4a7c916ca4a970358b9df90051008f729685ff05e9724a9dddba32630c37cb96
          transaction_index: transaction_index
          transaction_hash: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
          seller_address: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
        - token_ids:
          - "15"
          - "54"
          buyer_address: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
          price: "1000000000000000"
          block_timestamp: 2021-06-04T16:00:15
          marketplace_address: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
          block_number: "13680123"
          block_hash: 0x4a7c916ca4a970358b9df90051008f729685ff05e9724a9dddba32630c37cb96
          transaction_index: transaction_index
          transaction_hash: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
          seller_address: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
        total: 2000
        page: 2
        page_size: 100
    chainList:
      type: string
      example: eth
      enum:
      - eth
      - 0x1
      - ropsten
      - 0x3
      - rinkeby
      - 0x4
      - goerli
      - 0x5
      - kovan
      - 0x2a
      - polygon
      - 0x89
      - mumbai
      - 0x13881
      - bsc
      - 0x38
      - bsc testnet
      - 0x61
      - avalanche
      - 0xa86a
      - avalanche testnet
      - 0xa869
      - fantom
      - 0xfa
      default: eth
    nft:
      required:
      - contract_type
      - name
      - symbol
      - token_address
      - token_id
      properties:
        token_address:
          type: string
          description: The address of the contract of the NFT
          example: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
        token_id:
          type: string
          description: The token id of the NFT
          example: "15"
        contract_type:
          type: string
          description: The type of NFT contract standard
          example: ERC721
        token_uri:
          type: string
          description: The uri to the metadata of the token
        metadata:
          type: string
          description: The metadata of the token
        synced_at:
          type: string
          description: when the metadata was last updated
        amount:
          type: string
          description: The number of this item the user owns (used by ERC1155)
          example: "1"
        name:
          type: string
          description: The name of the Token contract
          example: CryptoKitties
        symbol:
          type: string
          description: The symbol of the NFT contract
          example: RARI
      example:
        contract_type: ERC721
        symbol: RARI
        token_uri: token_uri
        metadata: metadata
        amount: "1"
        token_id: "15"
        name: CryptoKitties
        token_address: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
        synced_at: synced_at
    nftMetadata:
      required:
      - contract_type
      - metadata
      - synced_at
      - token_address
      - token_hash
      - token_id
      - token_uri
      properties:
        token_address:
          type: string
          description: The address of the contract of the NFT
          example: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
        token_id:
          type: string
          description: The token id of the NFT
          example: "15"
        contract_type:
          type: string
          description: The type of NFT contract standard
          example: ERC721
        token_uri:
          type: string
          description: The uri to the metadata of the token
        metadata:
          type: string
          description: The metadata of the token
        synced_at:
          type: string
          description: when the metadata was last updated
      example:
        contract_type: ERC721
        token_uri: token_uri
        metadata: metadata
        token_id: "15"
        token_address: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
        synced_at: synced_at
    nftCollection:
      properties:
        total:
          type: integer
          description: The total number of matches for this query
          example: 2000
        page:
          type: integer
          description: The page of the current result
          example: 2
        page_size:
          type: integer
          description: The number of results per page
          example: 100
        result:
          type: array
          items:
            $ref: '#/components/schemas/nft'
      example:
        result:
        - contract_type: ERC721
          symbol: RARI
          token_uri: token_uri
          metadata: metadata
          amount: "1"
          token_id: "15"
          name: CryptoKitties
          token_address: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
          synced_at: synced_at
        - contract_type: ERC721
          symbol: RARI
          token_uri: token_uri
          metadata: metadata
          amount: "1"
          token_id: "15"
          name: CryptoKitties
          token_address: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
          synced_at: synced_at
        total: 2000
        page: 2
        page_size: 100
    nftMetadataCollection:
      properties:
        total:
          type: integer
          description: The total number of matches for this query
          example: 2000
        page:
          type: integer
          description: The page of the current result
          example: 2
        page_size:
          type: integer
          description: The number of results per page
          example: 100
        result:
          type: array
          items:
            $ref: '#/components/schemas/nftMetadata'
      example:
        result:
        - contract_type: ERC721
          token_uri: token_uri
          metadata: metadata
          token_id: "15"
          token_address: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
          synced_at: synced_at
        - contract_type: ERC721
          token_uri: token_uri
          metadata: metadata
          token_id: "15"
          token_address: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
          synced_at: synced_at
        total: 2000
        page: 2
        page_size: 100
    nftOwner:
      required:
      - block_number
      - block_number_minted
      - contract_type
      - name
      - owner_of
      - symbol
      - token_address
      - token_id
      properties:
        token_address:
          type: string
          description: The address of the contract of the NFT
          example: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
        token_id:
          type: string
          description: The token id of the NFT
          example: "15"
        contract_type:
          type: string
          description: The type of NFT contract standard
          example: ERC721
        owner_of:
          type: string
          description: The address of the owner of the NFT
          example: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
        block_number:
          type: string
          description: The blocknumber when the amount or owner changed
          example: "88256"
        block_number_minted:
          type: string
          description: The blocknumber when the NFT was minted
          example: "88256"
        token_uri:
          type: string
          description: The uri to the metadata of the token
        metadata:
          type: string
          description: The metadata of the token
        synced_at:
          type: string
          description: when the metadata was last updated
        amount:
          type: string
          description: The number of this item the user owns (used by ERC1155)
          example: "1"
        name:
          type: string
          description: The name of the Token contract
          example: CryptoKitties
        symbol:
          type: string
          description: The symbol of the NFT contract
          example: RARI
      example:
        contract_type: ERC721
        block_number_minted: "88256"
        symbol: RARI
        owner_of: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
        token_uri: token_uri
        metadata: metadata
        amount: "1"
        token_id: "15"
        name: CryptoKitties
        block_number: "88256"
        token_address: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
        synced_at: synced_at
    nftOwnerCollection:
      properties:
        status:
          type: string
          description: "The syncing status of the address [SYNCING/SYNCED]"
          example: SYNCING
        total:
          type: integer
          description: The total number of matches for this query
          example: 2000
        page:
          type: integer
          description: The page of the current result
          example: 2
        page_size:
          type: integer
          description: The number of results per page
          example: 100
        result:
          type: array
          items:
            $ref: '#/components/schemas/nftOwner'
      example:
        result:
        - contract_type: ERC721
          block_number_minted: "88256"
          symbol: RARI
          owner_of: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
          token_uri: token_uri
          metadata: metadata
          amount: "1"
          token_id: "15"
          name: CryptoKitties
          block_number: "88256"
          token_address: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
          synced_at: synced_at
        - contract_type: ERC721
          block_number_minted: "88256"
          symbol: RARI
          owner_of: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
          token_uri: token_uri
          metadata: metadata
          amount: "1"
          token_id: "15"
          name: CryptoKitties
          block_number: "88256"
          token_address: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
          synced_at: synced_at
        total: 2000
        page: 2
        status: SYNCING
        page_size: 100
    nftTransfer:
      required:
      - block_hash
      - block_number
      - block_timestamp
      - contract_type
      - log_index
      - to_address
      - token_address
      - token_id
      - transaction_hash
      properties:
        token_address:
          type: string
          description: The address of the contract of the NFT
          example: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
        token_id:
          type: string
          description: The token id of the NFT
          example: "15"
        from_address:
          type: string
          description: The address that sent the NFT
          example: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
        to_address:
          type: string
          description: The address that recieved the NFT
          example: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
        value:
          type: string
          description: The value that was sent in the transaction (ETH/BNB/etc..)
          example: "1000000000000000"
        amount:
          type: string
          description: The number of tokens transferred
          example: "1"
        contract_type:
          type: string
          description: The type of NFT contract standard
          example: ERC721
        block_number:
          type: string
          description: The blocknumber of the transaction
          example: "88256"
        block_timestamp:
          type: string
          description: The block timestamp
          example: 2021-06-04T16:00:15
        block_hash:
          type: string
          description: The block hash of the transaction
        transaction_hash:
          type: string
          description: The transaction hash
          example: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
        transaction_type:
          type: string
          description: The transaction type
        transaction_index:
          type: string
          description: The transaction index
        log_index:
          type: integer
          description: The log index
        operator:
          type: string
          description: The operator present only for ERC1155 Transfers
          example: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
      example:
        amount: "1"
        block_number: "88256"
        block_hash: block_hash
        token_address: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
        to_address: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
        transaction_index: transaction_index
        transaction_type: transaction_type
        log_index: 0
        operator: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
        contract_type: ERC721
        token_id: "15"
        block_timestamp: 2021-06-04T16:00:15
        from_address: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
        value: "1000000000000000"
        transaction_hash: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
    nftTransferCollection:
      required:
      - page
      - page_size
      - result
      - total
      properties:
        total:
          type: integer
          description: The total number of matches for this query
          example: 2000
        page:
          type: integer
          description: The page of the current result
          example: 2
        page_size:
          type: integer
          description: The number of results per page
          example: 100
        result:
          type: array
          items:
            $ref: '#/components/schemas/nftTransfer'
        block_exists:
          type: boolean
          description: Indicator if the block exists
          example: true
        index_complete:
          type: boolean
          description: Indicator if the block is fully indexed
          example: true
      example:
        result:
        - amount: "1"
          block_number: "88256"
          block_hash: block_hash
          token_address: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
          to_address: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
          transaction_index: transaction_index
          transaction_type: transaction_type
          log_index: 0
          operator: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
          contract_type: ERC721
          token_id: "15"
          block_timestamp: 2021-06-04T16:00:15
          from_address: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
          value: "1000000000000000"
          transaction_hash: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
        - amount: "1"
          block_number: "88256"
          block_hash: block_hash
          token_address: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
          to_address: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
          transaction_index: transaction_index
          transaction_type: transaction_type
          log_index: 0
          operator: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
          contract_type: ERC721
          token_id: "15"
          block_timestamp: 2021-06-04T16:00:15
          from_address: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
          value: "1000000000000000"
          transaction_hash: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
        block_exists: true
        total: 2000
        page: 2
        index_complete: true
        page_size: 100
    nftContractMetadata:
      required:
      - contract_type
      - name
      - symbol
      - token_address
      properties:
        token_address:
          type: string
          description: The address of the token contract
          example: 0x2d30ca6f024dbc1307ac8a1a44ca27de6f797ec22ef20627a1307243b0ab7d09
        name:
          type: string
          description: The name of the token Contract
          example: KryptoKitties
        synced_at:
          type: string
          description: Timestamp of when the contract was last synced with the node
        symbol:
          type: string
          description: The symbol of the NFT contract
          example: RARI
        contract_type:
          type: string
          description: The type of NFT contract
          example: ERC721
      example:
        symbol: RARI
        contract_type: ERC721
        name: KryptoKitties
        token_address: 0x2d30ca6f024dbc1307ac8a1a44ca27de6f797ec22ef20627a1307243b0ab7d09
        synced_at: synced_at
    nftContractMetadataCollection:
      required:
      - page
      - page_size
      - result
      - total
      properties:
        total:
          type: integer
          description: The total number of matches for this query
          example: 2000
        page:
          type: integer
          description: The page of the current result
          example: 2
        page_size:
          type: integer
          description: The number of results per page
          example: 100
        result:
          type: array
          items:
            $ref: '#/components/schemas/nftContractMetadata'
    erc20Transaction:
      required:
      - address
      - block_hash
      - block_number
      - block_timestamp
      - from_address
      - to_address
      - transaction_hash
      - value
      properties:
        transaction_hash:
          type: string
          description: The transaction hash
          example: 0x2d30ca6f024dbc1307ac8a1a44ca27de6f797ec22ef20627a1307243b0ab7d09
        address:
          type: string
          description: The address of the token
          example: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
        block_timestamp:
          type: string
          description: The block timestamp
          example: 2021-04-02T10:07:54.000Z
        block_number:
          type: string
          description: The block number
          example: "12526958"
        block_hash:
          type: string
          description: The block hash
          example: 0x0372c302e3c52e8f2e15d155e2c545e6d802e479236564af052759253b20fd86
        to_address:
          type: string
          description: The recipient
          example: 0x62AED87d21Ad0F3cdE4D147Fdcc9245401Af0044
        from_address:
          type: string
          description: The sender
          example: 0xd4a3BebD824189481FC45363602b83C9c7e9cbDf
        value:
          type: string
          description: The value that was transfered (in wei)
          example: "650000000000000000"
      example:
        address: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
        block_timestamp: 2021-04-02T10:07:54.000Z
        block_number: "12526958"
        block_hash: 0x0372c302e3c52e8f2e15d155e2c545e6d802e479236564af052759253b20fd86
        to_address: 0x62AED87d21Ad0F3cdE4D147Fdcc9245401Af0044
        from_address: 0xd4a3BebD824189481FC45363602b83C9c7e9cbDf
        value: "650000000000000000"
        transaction_hash: 0x2d30ca6f024dbc1307ac8a1a44ca27de6f797ec22ef20627a1307243b0ab7d09
    historicalNftTransfer:
      required:
      - address
      - amounts
      - block_hash
      - block_number
      - block_timestamp
      - contract_type
      - from_address
      - to_address
      - token_ids
      - transaction_hash
      properties:
        transaction_hash:
          type: string
          description: The transaction hash
          example: 0x2d30ca6f024dbc1307ac8a1a44ca27de6f797ec22ef20627a1307243b0ab7d09
        address:
          type: string
          description: The address of the token
          example: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
        block_timestamp:
          type: string
          description: The block timestamp
          example: 2021-04-02T10:07:54.000Z
        block_number:
          type: string
          description: The block number
          example: "12526958"
        block_hash:
          type: string
          description: The block hash
          example: 0x0372c302e3c52e8f2e15d155e2c545e6d802e479236564af052759253b20fd86
        to_address:
          type: string
          description: The recipient
          example: 0x62AED87d21Ad0F3cdE4D147Fdcc9245401Af0044
        from_address:
          type: string
          description: The sender
          example: 0xd4a3BebD824189481FC45363602b83C9c7e9cbDf
        token_ids:
          type: array
          description: The token ids of the tokens that were transfered
          items:
            type: string
            example: "265"
        amounts:
          type: array
          description: The amounts that were transfered
          items:
            type: string
            example: "1"
        contract_type:
          type: string
          description: They contract type of the transfer
          example: ERC721
    erc20Metadata:
      required:
      - address
      - decimals
      - name
      - symbol
      properties:
        address:
          type: string
          description: The address of the token contract
          example: 0x2d30ca6f024dbc1307ac8a1a44ca27de6f797ec22ef20627a1307243b0ab7d09
        name:
          type: string
          description: The name of the token Contract
          example: Kylin Network
        symbol:
          type: string
          description: The symbol of the NFT contract
          example: KYL
        decimals:
          type: string
          description: The number of decimals on of the token
          example: "18"
        logo:
          type: string
          description: The logo of the token
          example: https://cdn.moralis.io/eth/0x67b6d479c7bb412c54e03dca8e1bc6740ce6b99c.png
        logo_hash:
          type: string
          description: The logo hash
          example: ee7aa2cdf100649a3521a082116258e862e6971261a39b5cd4e4354fcccbc54d
        thumbnail:
          type: string
          description: The thumbnail of the logo
          example: https://cdn.moralis.io/eth/0x67b6d479c7bb412c54e03dca8e1bc6740ce6b99c_thumb.png
        block_number:
          type: string
        validated:
          type: string
      example:
        symbol: KYL
        thumbnail: https://cdn.moralis.io/eth/0x67b6d479c7bb412c54e03dca8e1bc6740ce6b99c_thumb.png
        address: 0x2d30ca6f024dbc1307ac8a1a44ca27de6f797ec22ef20627a1307243b0ab7d09
        validated: validated
        decimals: "18"
        name: Kylin Network
        logo: https://cdn.moralis.io/eth/0x67b6d479c7bb412c54e03dca8e1bc6740ce6b99c.png
        block_number: block_number
        logo_hash: ee7aa2cdf100649a3521a082116258e862e6971261a39b5cd4e4354fcccbc54d
    metadataResync:
      required:
      - status
      properties:
        status:
          type: string
          description: The status of resync request
      example:
        status: status
    erc721Metadata:
      required:
      - name
      - symbol
      properties:
        name:
          type: string
          description: The name of the token Contract
          example: Kylin Network
        symbol:
          type: string
          description: The symbol of the NFT contract
          example: KYL
        token_uri:
          type: string
    erc20Price:
      required:
      - symbol
      - usdPrice
      properties:
        nativePrice:
          $ref: '#/components/schemas/nativeErc20Price'
        usdPrice:
          type: number
          description: The price in USD for the token
          format: double
          example: 19.722370676
        exchangeAddress:
          type: string
          description: The address of the exchange used to calculate the price
          example: 0x1f98431c8ad98523631ae4a59f267346ea31f984
        exchangeName:
          type: string
          description: The name of the exchange used for calculating the price
          example: Uniswap v3
      example:
        usdPrice: 19.722370676
        exchangeAddress: 0x1f98431c8ad98523631ae4a59f267346ea31f984
        nativePrice:
          symbol: ETH
          decimals: 18
          name: Ether
          value: "8409770570506626"
        exchangeName: Uniswap v3
    nativeErc20Price:
      required:
      - decimals
      - name
      - symbol
      - value
      properties:
        value:
          type: string
          description: The native price of the token
          example: "8409770570506626"
        decimals:
          type: integer
          description: The number of decimals of the token
          example: 18
        name:
          type: string
          description: The Name of the token
          example: Ether
        symbol:
          type: string
          description: The Symbol of the token
          example: ETH
      example:
        symbol: ETH
        decimals: 18
        name: Ether
        value: "8409770570506626"
    erc20TransactionCollection:
      properties:
        total:
          type: integer
          description: The total number of matches for this query
          example: 2000
        page:
          type: integer
          description: The page of the current result
          example: 2
        page_size:
          type: integer
          description: The number of results per page
          example: 100
        result:
          type: array
          items:
            $ref: '#/components/schemas/erc20Transaction'
      example:
        result:
        - address: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
          block_timestamp: 2021-04-02T10:07:54.000Z
          block_number: "12526958"
          block_hash: 0x0372c302e3c52e8f2e15d155e2c545e6d802e479236564af052759253b20fd86
          to_address: 0x62AED87d21Ad0F3cdE4D147Fdcc9245401Af0044
          from_address: 0xd4a3BebD824189481FC45363602b83C9c7e9cbDf
          value: "650000000000000000"
          transaction_hash: 0x2d30ca6f024dbc1307ac8a1a44ca27de6f797ec22ef20627a1307243b0ab7d09
        - address: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
          block_timestamp: 2021-04-02T10:07:54.000Z
          block_number: "12526958"
          block_hash: 0x0372c302e3c52e8f2e15d155e2c545e6d802e479236564af052759253b20fd86
          to_address: 0x62AED87d21Ad0F3cdE4D147Fdcc9245401Af0044
          from_address: 0xd4a3BebD824189481FC45363602b83C9c7e9cbDf
          value: "650000000000000000"
          transaction_hash: 0x2d30ca6f024dbc1307ac8a1a44ca27de6f797ec22ef20627a1307243b0ab7d09
        total: 2000
        page: 2
        page_size: 100
    ens:
      required:
      - name
      properties:
        name:
          type: string
          description: Resolved ENS address
          example: Vitalik.eth
      example:
        name: Vitalik.eth
    resolve:
      required:
      - address
      properties:
        address:
          type: string
          description: Resolved domain address
          example: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
      example:
        address: 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e
    reservesCollection:
      required:
      - reserve0
      - reserve1
      properties:
        reserve0:
          type: string
          description: reserve0
          example: "1177323085102288091856004"
        reserve1:
          type: string
          description: reserve1
          example: "9424175928981149993184"
      example:
        reserve1: "9424175928981149993184"
        reserve0: "1177323085102288091856004"
    ipfsFileRequest:
      required:
      - content
      - path
      properties:
        path:
          type: string
          description: Path to file
          example: moralis/logo.jpg
        content:
          type: string
          description: base64 or JSON
          example: iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAAApgAAAKYB3X3
    ipfsFile:
      required:
      - path
      properties:
        path:
          type: string
          description: Path to file
          example: https://ipfs.moralis.io/QmPQ3YJ3hgfsBzJ1U4MGyV2C1GhDy6MWCENr1qMdMpKVnY/moralis/logo.jpg
      example:
        path: https://ipfs.moralis.io/QmPQ3YJ3hgfsBzJ1U4MGyV2C1GhDy6MWCENr1qMdMpKVnY/moralis/logo.jpg
    web3version:
      required:
      - version
      properties:
        version:
          type: string
          description: version of the api
          example: 1.0.0
      example:
        version: 1.0.0
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      name: X-API-Key
      in: header
