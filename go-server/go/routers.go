/*
 * Moralis API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * API version: 2
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger

import (
	"fmt"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

type Route struct {
	Name        string
	Method      string
	Pattern     string
	HandlerFunc http.HandlerFunc
}

type Routes []Route

func NewRouter() *mux.Router {
	router := mux.NewRouter().StrictSlash(true)
	for _, route := range routes {
		var handler http.Handler
		handler = route.HandlerFunc
		handler = Logger(handler, route.Name)

		router.
			Methods(route.Method).
			Path(route.Pattern).
			Name(route.Name).
			Handler(handler)
	}

	return router
}

func Index(w http.ResponseWriter, r *http.Request) {
	fmt.Fprintf(w, "Hello World!")
}

var routes = Routes{
	Route{
		"Index",
		"GET",
		"/vit534/apispec/2/",
		Index,
	},

	Route{
		"GetNFTTransfers",
		strings.ToUpper("Get"),
		"/vit534/apispec/2/{address}/nft/transfers",
		GetNFTTransfers,
	},

	Route{
		"GetNFTs",
		strings.ToUpper("Get"),
		"/vit534/apispec/2/{address}/nft",
		GetNFTs,
	},

	Route{
		"GetNFTsForContract",
		strings.ToUpper("Get"),
		"/vit534/apispec/2/{address}/nft/{token_address}",
		GetNFTsForContract,
	},

	Route{
		"GetNativeBalance",
		strings.ToUpper("Get"),
		"/vit534/apispec/2/{address}/balance",
		GetNativeBalance,
	},

	Route{
		"GetTokenBalances",
		strings.ToUpper("Get"),
		"/vit534/apispec/2/{address}/erc20",
		GetTokenBalances,
	},

	Route{
		"GetTokenTransfers",
		strings.ToUpper("Get"),
		"/vit534/apispec/2/{address}/erc20/transfers",
		GetTokenTransfers,
	},

	Route{
		"GetTransactions",
		strings.ToUpper("Get"),
		"/vit534/apispec/2/{address}",
		GetTransactions,
	},

	Route{
		"GetPairAddress",
		strings.ToUpper("Get"),
		"/vit534/apispec/2/{token0_address}/{token1_address}/pairAddress",
		GetPairAddress,
	},

	Route{
		"GetPairReserves",
		strings.ToUpper("Get"),
		"/vit534/apispec/2/{pair_address}/reserves",
		GetPairReserves,
	},

	Route{
		"Web3ApiVersion",
		strings.ToUpper("Get"),
		"/vit534/apispec/2/web3/version",
		Web3ApiVersion,
	},

	Route{
		"GetBlock",
		strings.ToUpper("Get"),
		"/vit534/apispec/2/block/{block_number_or_hash}",
		GetBlock,
	},

	Route{
		"GetContractEvents",
		strings.ToUpper("Post"),
		"/vit534/apispec/2/{address}/events",
		GetContractEvents,
	},

	Route{
		"GetDateToBlock",
		strings.ToUpper("Get"),
		"/vit534/apispec/2/dateToBlock",
		GetDateToBlock,
	},

	Route{
		"GetLogsByAddress",
		strings.ToUpper("Get"),
		"/vit534/apispec/2/{address}/logs",
		GetLogsByAddress,
	},

	Route{
		"GetNFTTransfersByBlock",
		strings.ToUpper("Get"),
		"/vit534/apispec/2/block/{block_number_or_hash}/nft/transfers",
		GetNFTTransfersByBlock,
	},

	Route{
		"GetTransaction",
		strings.ToUpper("Get"),
		"/vit534/apispec/2/transaction/{transaction_hash}",
		GetTransaction,
	},

	Route{
		"RunContractFunction",
		strings.ToUpper("Post"),
		"/vit534/apispec/2/{address}/function",
		RunContractFunction,
	},

	Route{
		"ResolveAddress",
		strings.ToUpper("Get"),
		"/vit534/apispec/2/resolve/{address}/reverse",
		ResolveAddress,
	},

	Route{
		"ResolveDomain",
		strings.ToUpper("Get"),
		"/vit534/apispec/2/resolve/{domain}",
		ResolveDomain,
	},

	Route{
		"UploadFolder",
		strings.ToUpper("Post"),
		"/vit534/apispec/2/ipfs/uploadFolder",
		UploadFolder,
	},

	Route{
		"GetAllTokenIds",
		strings.ToUpper("Get"),
		"/vit534/apispec/2/nft/{address}",
		GetAllTokenIds,
	},

	Route{
		"GetContractNFTTransfers",
		strings.ToUpper("Get"),
		"/vit534/apispec/2/nft/{address}/transfers",
		GetContractNFTTransfers,
	},

	Route{
		"GetNFTLowestPrice",
		strings.ToUpper("Get"),
		"/vit534/apispec/2/nft/{address}/lowestprice",
		GetNFTLowestPrice,
	},

	Route{
		"GetNFTMetadata",
		strings.ToUpper("Get"),
		"/vit534/apispec/2/nft/{address}/metadata",
		GetNFTMetadata,
	},

	Route{
		"GetNFTOwners",
		strings.ToUpper("Get"),
		"/vit534/apispec/2/nft/{address}/owners",
		GetNFTOwners,
	},

	Route{
		"GetNFTTrades",
		strings.ToUpper("Get"),
		"/vit534/apispec/2/nft/{address}/trades",
		GetNFTTrades,
	},

	Route{
		"GetNftTransfersFromToBlock",
		strings.ToUpper("Get"),
		"/vit534/apispec/2/nft/transfers",
		GetNftTransfersFromToBlock,
	},

	Route{
		"GetTokenAddressTransfers",
		strings.ToUpper("Get"),
		"/vit534/apispec/2/erc20/{address}/transfers",
		GetTokenAddressTransfers,
	},

	Route{
		"GetTokenAllowance",
		strings.ToUpper("Get"),
		"/vit534/apispec/2/erc20/{address}/allowance",
		GetTokenAllowance,
	},

	Route{
		"GetTokenIdMetadata",
		strings.ToUpper("Get"),
		"/vit534/apispec/2/nft/{address}/{token_id}",
		GetTokenIdMetadata,
	},

	Route{
		"GetTokenIdOwners",
		strings.ToUpper("Get"),
		"/vit534/apispec/2/nft/{address}/{token_id}/owners",
		GetTokenIdOwners,
	},

	Route{
		"GetTokenMetadata",
		strings.ToUpper("Get"),
		"/vit534/apispec/2/erc20/metadata",
		GetTokenMetadata,
	},

	Route{
		"GetTokenMetadataBySymbol",
		strings.ToUpper("Get"),
		"/vit534/apispec/2/erc20/metadata/symbols",
		GetTokenMetadataBySymbol,
	},

	Route{
		"GetTokenPrice",
		strings.ToUpper("Get"),
		"/vit534/apispec/2/erc20/{address}/price",
		GetTokenPrice,
	},

	Route{
		"GetWalletTokenIdTransfers",
		strings.ToUpper("Get"),
		"/vit534/apispec/2/nft/{address}/{token_id}/transfers",
		GetWalletTokenIdTransfers,
	},

	Route{
		"ReSyncMetadata",
		strings.ToUpper("Get"),
		"/vit534/apispec/2/nft/{address}/{token_id}/metadata/resync",
		ReSyncMetadata,
	},

	Route{
		"SearchNFTs",
		strings.ToUpper("Get"),
		"/vit534/apispec/2/nft/search",
		SearchNFTs,
	},

	Route{
		"SyncNFTContract",
		strings.ToUpper("Put"),
		"/vit534/apispec/2/nft/{address}/sync",
		SyncNFTContract,
	},
}
